<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.axinger.mapper.SysPersonMapper">

    <resultMap id="BaseResultMap" type="com.github.axinger.domain.SysPersonEntity">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="version" column="version" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,age,birthday,
        create_time,deleted,gender,
        name,update_time,
        version
    </sql>


    <select id="customSqlSegment" resultMap="BaseResultMap">
        SELECT
        <choose>
            <when test="ew != null and ew.SqlSelect != null and ew.SqlSelect != ''">
                ${ew.SqlSelect}
            </when>
            <otherwise>
                <include refid="Base_Column_List"/>
            </otherwise>
        </choose>
        FROM
        sys_person
        ${ew.customSqlSegment}
    </select>

    <select id="sqlSegment" resultMap="BaseResultMap">
        SELECT
        <choose>
            <when test="ew != null and ew.SqlSelect != null and ew.SqlSelect != ''">
                ${ew.SqlSelect}
            </when>
            <otherwise>
                <include refid="Base_Column_List"/>
            </otherwise>
        </choose>
        FROM
        sys_person
        where deleted == 0
        <if test="ew != null">
            <if test="ew.nonEmptyOfWhere">
                AND
            </if>
            ${ew.sqlSegment}
        </if>

    </select>


    <select id="findMaxIdList" resultMap="BaseResultMap">

        SELECT *
        FROM `device_status_timeline` bb
                 INNER JOIN (SELECT MAX(`id`) AS mid, `device_id` AS m_device_id
                             FROM `device_status_timeline` ${ew.customSqlSegment}
                             GROUP BY `device_id`) AS tb ON bb.`id` = tb.mid

    </select>
</mapper>
